I'm building an offline-first PWA called "FitCircle" (React/TypeScript + localStorage + service worker) that tracks fitness routines and allows users to generate full JSON backups of their progress.

Right now, users can:
- Manually download a JSON backup file ("Download Complete Backup")
- Restore it manually ("Restore from Backup")
- A daily auto-backup feature stores the data locally, but is limited by browser restrictions and will be lost if local storage is cleared.

I want to upgrade my data safety system by letting users back up and restore their JSON data securely using **Apple iCloud login**, as follows:

OBJECTIVE:
Set up Apple iCloud-based login + encrypted cloud backup/restore that integrates with my existing backup logic. I do not want to make FitCircle a fully online app — the cloud backup should just be an optional enhancement for serious users who opt in.

THE FUNCTIONALITY I WANT:
1. **Login with Apple ID (Sign in with Apple)**:
   - Use the official Apple OAuth 2.0 or Sign in with Apple JS flow.
   - User signs in and we store their ID (but never password).
   - Use this login session to associate backups with the user's iCloud identity.

2. **Encrypt backup**:
   - When a user performs a backup, encrypt the `.json` using a secure, reversible encryption method (e.g. AES-GCM) with a key derived from their Apple session token or user ID.
   - Don't store the key in plain text anywhere.

3. **Save encrypted `.json` file to iCloud Drive**:
   - Integrate the Apple iCloud Drive JS API (if possible) or present a file save interface so the user can explicitly save their encrypted `.json` to their own iCloud Drive or Files app.
   - If Apple iCloud API is unavailable directly, use `navigator.share()` to allow them to save the file manually.

4. **Restore from iCloud**:
   - Let users choose a `.json` backup from iCloud or local files using a file picker.
   - Decrypt the file using the key derived from their Apple session (or warn if not restorable).
   - Restore the app state from this backup just like my current manual restore flow.

NOTES:
- This must work within a PWA and avoid heavy backend use.
- If backend is absolutely required, suggest the lightest possible option — ideally, serverless or iCloud-native.
- Prioritize browser compatibility (especially Safari, since iOS users are a priority).

Deliverables:
- A complete plan and example implementation for Apple Sign-In in a React PWA
- A secure backup encryption + decryption module
- Cloud export using iCloud Drive or Files integration
- Restore flow using file picker + decryption

Let me know if Apple iCloud JS API is not viable — fallback to `navigator.share()` or third-party cloud (e.g. Google Drive) is acceptable if Apple-only solution is infeasible.